

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Apr 20 11:51:30 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27     0000                     
    28                           ; Version 2.40
    29                           ; Generated 17/11/2021 GMT
    30                           ; 
    31                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63     0000                     	;# 
    64     0001                     	;# 
    65     0002                     	;# 
    66     0003                     	;# 
    67     0004                     	;# 
    68     0005                     	;# 
    69     0006                     	;# 
    70     0007                     	;# 
    71     0008                     	;# 
    72     0009                     	;# 
    73     000A                     	;# 
    74     000B                     	;# 
    75     000C                     	;# 
    76     000D                     	;# 
    77     000E                     	;# 
    78     000E                     	;# 
    79     000F                     	;# 
    80     0010                     	;# 
    81     0011                     	;# 
    82     0012                     	;# 
    83     0013                     	;# 
    84     0014                     	;# 
    85     0015                     	;# 
    86     0015                     	;# 
    87     0016                     	;# 
    88     0017                     	;# 
    89     0018                     	;# 
    90     0019                     	;# 
    91     001A                     	;# 
    92     001B                     	;# 
    93     001B                     	;# 
    94     001C                     	;# 
    95     001D                     	;# 
    96     001E                     	;# 
    97     001F                     	;# 
    98     0081                     	;# 
    99     0085                     	;# 
   100     0086                     	;# 
   101     0087                     	;# 
   102     0088                     	;# 
   103     0089                     	;# 
   104     008C                     	;# 
   105     008D                     	;# 
   106     008E                     	;# 
   107     008F                     	;# 
   108     0090                     	;# 
   109     0091                     	;# 
   110     0092                     	;# 
   111     0093                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0094                     	;# 
   115     0095                     	;# 
   116     0096                     	;# 
   117     0097                     	;# 
   118     0098                     	;# 
   119     0099                     	;# 
   120     009A                     	;# 
   121     009B                     	;# 
   122     009C                     	;# 
   123     009D                     	;# 
   124     009E                     	;# 
   125     009F                     	;# 
   126     0105                     	;# 
   127     0107                     	;# 
   128     0108                     	;# 
   129     0109                     	;# 
   130     010C                     	;# 
   131     010C                     	;# 
   132     010D                     	;# 
   133     010E                     	;# 
   134     010F                     	;# 
   135     0185                     	;# 
   136     0187                     	;# 
   137     0188                     	;# 
   138     0189                     	;# 
   139     018C                     	;# 
   140     018D                     	;# 
   141     0000                     	;# 
   142     0001                     	;# 
   143     0002                     	;# 
   144     0003                     	;# 
   145     0004                     	;# 
   146     0005                     	;# 
   147     0006                     	;# 
   148     0007                     	;# 
   149     0008                     	;# 
   150     0009                     	;# 
   151     000A                     	;# 
   152     000B                     	;# 
   153     000C                     	;# 
   154     000D                     	;# 
   155     000E                     	;# 
   156     000E                     	;# 
   157     000F                     	;# 
   158     0010                     	;# 
   159     0011                     	;# 
   160     0012                     	;# 
   161     0013                     	;# 
   162     0014                     	;# 
   163     0015                     	;# 
   164     0015                     	;# 
   165     0016                     	;# 
   166     0017                     	;# 
   167     0018                     	;# 
   168     0019                     	;# 
   169     001A                     	;# 
   170     001B                     	;# 
   171     001B                     	;# 
   172     001C                     	;# 
   173     001D                     	;# 
   174     001E                     	;# 
   175     001F                     	;# 
   176     0081                     	;# 
   177     0085                     	;# 
   178     0086                     	;# 
   179     0087                     	;# 
   180     0088                     	;# 
   181     0089                     	;# 
   182     008C                     	;# 
   183     008D                     	;# 
   184     008E                     	;# 
   185     008F                     	;# 
   186     0090                     	;# 
   187     0091                     	;# 
   188     0092                     	;# 
   189     0093                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0094                     	;# 
   193     0095                     	;# 
   194     0096                     	;# 
   195     0097                     	;# 
   196     0098                     	;# 
   197     0099                     	;# 
   198     009A                     	;# 
   199     009B                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     0105                     	;# 
   205     0107                     	;# 
   206     0108                     	;# 
   207     0109                     	;# 
   208     010C                     	;# 
   209     010C                     	;# 
   210     010D                     	;# 
   211     010E                     	;# 
   212     010F                     	;# 
   213     0185                     	;# 
   214     0187                     	;# 
   215     0188                     	;# 
   216     0189                     	;# 
   217     018C                     	;# 
   218     018D                     	;# 
   219                           
   220                           	psect	idataBANK1
   221     0330                     __pidataBANK1:
   222                           
   223                           ;initializer for _menu
   224     0330  344D               	retlw	77
   225     0331  3465               	retlw	101
   226     0332  346E               	retlw	110
   227     0333  3475               	retlw	117
   228     0334  343A               	retlw	58
   229     0335  3420               	retlw	32
   230     0336  340D               	retlw	13
   231     0337  3420               	retlw	32
   232     0338  3431               	retlw	49
   233     0339  3429               	retlw	41
   234     033A  344C               	retlw	76
   235     033B  3465               	retlw	101
   236     033C  3465               	retlw	101
   237     033D  3472               	retlw	114
   238     033E  3420               	retlw	32
   239     033F  3470               	retlw	112
   240     0340  346F               	retlw	111
   241     0341  3474               	retlw	116
   242     0342  3465               	retlw	101
   243     0343  346E               	retlw	110
   244     0344  3463               	retlw	99
   245     0345  3469               	retlw	105
   246     0346  346F               	retlw	111
   247     0347  346D               	retlw	109
   248     0348  3465               	retlw	101
   249     0349  3474               	retlw	116
   250     034A  3472               	retlw	114
   251     034B  346F               	retlw	111
   252     034C  3420               	retlw	32
   253     034D  340D               	retlw	13
   254     034E  3420               	retlw	32
   255     034F  3432               	retlw	50
   256     0350  3429               	retlw	41
   257     0351  3465               	retlw	101
   258     0352  346E               	retlw	110
   259     0353  3476               	retlw	118
   260     0354  3469               	retlw	105
   261     0355  3461               	retlw	97
   262     0356  3472               	retlw	114
   263     0357  3420               	retlw	32
   264     0358  3441               	retlw	65
   265     0359  3473               	retlw	115
   266     035A  3463               	retlw	99
   267     035B  3469               	retlw	105
   268     035C  3469               	retlw	105
   269     035D  3420               	retlw	32
   270     035E  340D               	retlw	13
   271     035F  3400               	retlw	0
   272                           
   273                           	psect	strings
   274     0168                     __pstrings:
   275     0168                     stringtab:
   276     0168                     __stringtab:
   277                           
   278                           ;	String table - string pointers are 1 byte each
   279     0168  1BFF               	btfsc	btemp+1,7
   280     0169  2972               	ljmp	stringcode
   281     016A  1383               	bcf	3,7
   282     016B  187F               	btfsc	btemp+1,0
   283     016C  1783               	bsf	3,7
   284     016D  0800               	movf	0,w
   285     016E  0A84               	incf	4,f
   286     016F  1903               	skipnz
   287     0170  0AFF               	incf	btemp+1,f
   288     0171  0008               	return
   289     0172                     stringcode:
   290     0172                     stringdir:
   291     0172  3001               	movlw	high stringdir
   292     0173  008A               	movwf	10
   293     0174  0804               	movf	4,w
   294     0175  0A84               	incf	4,f
   295     0176  0782               	addwf	2,f
   296     0177                     __stringbase:
   297     0177  3400               	retlw	0
   298     0178                     __end_of__stringtab:
   299     0178                     _dpowers:
   300     0178  3401               	retlw	1
   301     0179  3400               	retlw	0
   302     017A  340A               	retlw	10
   303     017B  3400               	retlw	0
   304     017C  3464               	retlw	100
   305     017D  3400               	retlw	0
   306     017E  34E8               	retlw	232
   307     017F  3403               	retlw	3
   308     0180  3410               	retlw	16
   309     0181  3427               	retlw	39
   310     0182                     __end_of_dpowers:
   311     0019                     _TXREG	set	25
   312     0018                     _RCSTAbits	set	24
   313     0009                     _PORTE	set	9
   314     0008                     _PORTD	set	8
   315     0006                     _PORTB	set	6
   316     0005                     _PORTA	set	5
   317     001E                     _ADRESH	set	30
   318     001F                     _ADCON0bits	set	31
   319     001A                     _RCREG	set	26
   320     000C                     _PIR1bits	set	12
   321     00F8                     _ADON	set	248
   322     0064                     _TXIF	set	100
   323     00C7                     _SPEN	set	199
   324     00C4                     _CREN	set	196
   325     005E                     _PEIE	set	94
   326     005F                     _GIE	set	95
   327     0066                     _ADIF	set	102
   328     008C                     _PIE1bits	set	140
   329     0098                     _TXSTAbits	set	152
   330     009A                     _SPBRGH	set	154
   331     0099                     _SPBRG	set	153
   332     009F                     _ADCON1bits	set	159
   333     008F                     _OSCCON	set	143
   334     0089                     _TRISE	set	137
   335     0088                     _TRISD	set	136
   336     0086                     _TRISB	set	134
   337     0085                     _TRISA	set	133
   338     04C5                     _TXEN	set	1221
   339     04C4                     _SYNC	set	1220
   340     04C2                     _BRGH	set	1218
   341     0466                     _ADIE	set	1126
   342     0189                     _ANSELH	set	393
   343     0188                     _ANSEL	set	392
   344     0C3B                     _BRG16	set	3131
   345     0182                     STR_3:
   346     0182  3445               	retlw	69	;'E'
   347     0183  346C               	retlw	108	;'l'
   348     0184  3420               	retlw	32	;' '
   349     0185  3476               	retlw	118	;'v'
   350     0186  3461               	retlw	97	;'a'
   351     0187  346C               	retlw	108	;'l'
   352     0188  346F               	retlw	111	;'o'
   353     0189  3472               	retlw	114	;'r'
   354     018A  3420               	retlw	32	;' '
   355     018B  3464               	retlw	100	;'d'
   356     018C  3465               	retlw	101	;'e'
   357     018D  346C               	retlw	108	;'l'
   358     018E  3420               	retlw	32	;' '
   359     018F  3470               	retlw	112	;'p'
   360     0190  346F               	retlw	111	;'o'
   361     0191  3474               	retlw	116	;'t'
   362     0192  3465               	retlw	101	;'e'
   363     0193  346E               	retlw	110	;'n'
   364     0194  3463               	retlw	99	;'c'
   365     0195  3469               	retlw	105	;'i'
   366     0196  346F               	retlw	111	;'o'
   367     0197  346D               	retlw	109	;'m'
   368     0198  3465               	retlw	101	;'e'
   369     0199  3474               	retlw	116	;'t'
   370     019A  3472               	retlw	114	;'r'
   371     019B  346F               	retlw	111	;'o'
   372     019C  3420               	retlw	32	;' '
   373     019D  3465               	retlw	101	;'e'
   374     019E  3473               	retlw	115	;'s'
   375     019F  343A               	retlw	58	;':'
   376     01A0  340D               	retlw	13
   377     01A1  3400               	retlw	0
   378     01A2                     STR_1:
   379     01A2  344E               	retlw	78	;'N'
   380     01A3  346F               	retlw	111	;'o'
   381     01A4  3420               	retlw	32	;' '
   382     01A5  3465               	retlw	101	;'e'
   383     01A6  3478               	retlw	120	;'x'
   384     01A7  3469               	retlw	105	;'i'
   385     01A8  3473               	retlw	115	;'s'
   386     01A9  3474               	retlw	116	;'t'
   387     01AA  3465               	retlw	101	;'e'
   388     01AB  3420               	retlw	32	;' '
   389     01AC  3465               	retlw	101	;'e'
   390     01AD  3473               	retlw	115	;'s'
   391     01AE  3461               	retlw	97	;'a'
   392     01AF  3420               	retlw	32	;' '
   393     01B0  346F               	retlw	111	;'o'
   394     01B1  3470               	retlw	112	;'p'
   395     01B2  3463               	retlw	99	;'c'
   396     01B3  3469               	retlw	105	;'i'
   397     01B4  346F               	retlw	111	;'o'
   398     01B5  346E               	retlw	110	;'n'
   399     01B6  3420               	retlw	32	;' '
   400     01B7  340D               	retlw	13
   401     01B8  3400               	retlw	0
   402     01B9                     STR_2:
   403     01B9  3425               	retlw	37	;'%'
   404     01BA  3464               	retlw	100	;'d'
   405     01BB  340D               	retlw	13
   406     01BC  3400               	retlw	0
   407                           
   408                           	psect	cinit
   409     0015                     start_initialization:	
   410                           ; #config settings
   411                           
   412     0015                     __initialization:
   413                           
   414                           ; Initialize objects allocated to BANK1
   415     0015  1383               	bcf	3,7	;select IRP bank0
   416     0016  30D0               	movlw	low (__pdataBANK1+48)
   417     0017  00FD               	movwf	btemp+-1
   418     0018  3003               	movlw	high __pidataBANK1
   419     0019  00FE               	movwf	btemp
   420     001A  3030               	movlw	low __pidataBANK1
   421     001B  00FF               	movwf	btemp+1
   422     001C  30A0               	movlw	low __pdataBANK1
   423     001D  0084               	movwf	4
   424     001E  120A  118A  23B6  120A  118A  	fcall	init_ram0
   425                           
   426                           ; Clear objects allocated to BANK0
   427     0023  01C3               	clrf	__pbssBANK0& (0+127)
   428     0024  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   429     0025  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   430     0026                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433     0026                     __end_of__initialization:
   434     0026  0183               	clrf	3
   435     0027  120A  118A  2B60   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssBANK0
   438     0043                     __pbssBANK0:
   439     0043                     _Vpot:
   440     0043                     	ds	1
   441     0044                     _opcion:
   442     0044                     	ds	1
   443     0045                     _num:
   444     0045                     	ds	1
   445                           
   446                           	psect	dataBANK1
   447     00A0                     __pdataBANK1:
   448     00A0                     _menu:
   449     00A0                     	ds	48
   450                           
   451                           	psect	inittext
   452     03B2                     init_fetch0:	
   453                           ;	Called with low address in FSR and high address in W
   454                           
   455     03B2  087E               	movf	btemp,w
   456     03B3  008A               	movwf	10
   457     03B4  087F               	movf	btemp+1,w
   458     03B5  0082               	movwf	2
   459     03B6                     init_ram0:	
   460                           ;Called with:
   461                           ;	high address of idata address in btemp 
   462                           ;	low address of idata address in btemp+1 
   463                           ;	low address of data in FSR
   464                           ;	high address + 1 of data in btemp-1
   465                           
   466     03B6  120A  118A  23B2  120A  118A  	fcall	init_fetch0
   467     03BB  0080               	movwf	0
   468     03BC  0A84               	incf	4,f
   469     03BD  0804               	movf	4,w
   470     03BE  067D               	xorwf	btemp+-1,w
   471     03BF  1903               	btfsc	3,2
   472     03C0  3400               	retlw	0
   473     03C1  0AFF               	incf	btemp+1,f
   474     03C2  1903               	btfsc	3,2
   475     03C3  0AFE               	incf	btemp,f
   476     03C4  2BB6               	goto	init_ram0
   477                           
   478                           	psect	cstackCOMMON
   479     0070                     __pcstackCOMMON:
   480     0070                     ?_POT:
   481     0070                     ?_TXT:	
   482                           ; 1 bytes @ 0x0
   483                           
   484     0070                     ??_TXT:	
   485                           ; 1 bytes @ 0x0
   486                           
   487     0070                     ?_setup:	
   488                           ; 1 bytes @ 0x0
   489                           
   490     0070                     ?_initUART:	
   491                           ; 1 bytes @ 0x0
   492                           
   493     0070                     ?_isr:	
   494                           ; 1 bytes @ 0x0
   495                           
   496     0070                     ?_main:	
   497                           ; 1 bytes @ 0x0
   498                           
   499     0070                     ?i1_cadena:	
   500                           ; 1 bytes @ 0x0
   501                           
   502     0070                     ?___lwdiv:	
   503                           ; 1 bytes @ 0x0
   504                           
   505     0070                     TXT@caracter:	
   506                           ; 2 bytes @ 0x0
   507                           
   508     0070                     ___lwdiv@divisor:	
   509                           ; 1 bytes @ 0x0
   510                           
   511     0070                     i1cadena@txt:	
   512                           ; 2 bytes @ 0x0
   513                           
   514                           
   515                           ; 2 bytes @ 0x0
   516     0070                     	ds	2
   517     0072                     ??i1_cadena:
   518     0072                     ___lwdiv@dividend:	
   519                           ; 1 bytes @ 0x2
   520                           
   521                           
   522                           ; 2 bytes @ 0x2
   523     0072                     	ds	2
   524     0074                     ??___lwdiv:
   525                           
   526                           ; 1 bytes @ 0x4
   527     0074                     	ds	1
   528     0075                     ___lwdiv@quotient:
   529     0075                     i1cadena@i:	
   530                           ; 2 bytes @ 0x5
   531                           
   532                           
   533                           ; 2 bytes @ 0x5
   534     0075                     	ds	2
   535     0077                     ___lwdiv@counter:
   536                           
   537                           ; 1 bytes @ 0x7
   538     0077                     	ds	1
   539     0078                     ?___lwmod:
   540     0078                     ___lwmod@divisor:	
   541                           ; 2 bytes @ 0x8
   542                           
   543                           
   544                           ; 2 bytes @ 0x8
   545     0078                     	ds	2
   546     007A                     ___lwmod@dividend:
   547                           
   548                           ; 2 bytes @ 0xA
   549     007A                     	ds	2
   550     007C                     ??___lwmod:
   551                           
   552                           ; 1 bytes @ 0xC
   553     007C                     	ds	1
   554     007D                     ___lwmod@counter:
   555                           
   556                           ; 1 bytes @ 0xD
   557     007D                     	ds	1
   558                           
   559                           	psect	cstackBANK0
   560     0020                     __pcstackBANK0:
   561     0020                     ?_sprintf:
   562     0020                     sprintf@f:	
   563                           ; 2 bytes @ 0x0
   564                           
   565                           
   566                           ; 1 bytes @ 0x0
   567     0020                     	ds	3
   568     0023                     ??_sprintf:
   569                           
   570                           ; 1 bytes @ 0x3
   571     0023                     	ds	3
   572     0026                     sprintf@ap:
   573                           
   574                           ; 1 bytes @ 0x6
   575     0026                     	ds	1
   576     0027                     sprintf@flag:
   577                           
   578                           ; 1 bytes @ 0x7
   579     0027                     	ds	1
   580     0028                     sprintf@prec:
   581                           
   582                           ; 1 bytes @ 0x8
   583     0028                     	ds	1
   584     0029                     sprintf@val:
   585                           
   586                           ; 2 bytes @ 0x9
   587     0029                     	ds	2
   588     002B                     sprintf@sp:
   589                           
   590                           ; 1 bytes @ 0xB
   591     002B                     	ds	1
   592     002C                     sprintf@c:
   593                           
   594                           ; 1 bytes @ 0xC
   595     002C                     	ds	1
   596     002D                     ??_POT:
   597                           
   598                           ; 1 bytes @ 0xD
   599     002D                     	ds	2
   600     002F                     POT@CVPOT:
   601                           
   602                           ; 4 bytes @ 0xF
   603     002F                     	ds	4
   604     0033                     ??_isr:
   605                           
   606                           ; 1 bytes @ 0x13
   607     0033                     	ds	6
   608     0039                     ?_cadena:
   609     0039                     ??_setup:	
   610                           ; 1 bytes @ 0x19
   611                           
   612     0039                     ??_initUART:	
   613                           ; 1 bytes @ 0x19
   614                           
   615     0039                     cadena@txt:	
   616                           ; 1 bytes @ 0x19
   617                           
   618                           
   619                           ; 2 bytes @ 0x19
   620     0039                     	ds	2
   621     003B                     ??_cadena:
   622                           
   623                           ; 1 bytes @ 0x1B
   624     003B                     	ds	3
   625     003E                     cadena@i:
   626                           
   627                           ; 2 bytes @ 0x1E
   628     003E                     	ds	2
   629     0040                     ??_main:
   630                           
   631                           ; 1 bytes @ 0x20
   632     0040                     	ds	3
   633                           
   634                           	psect	maintext
   635     0360                     __pmaintext:	
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 89 in file "PostLabC03.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : B00/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       3       0       0       0
   658 ;;      Totals:         0       3       0       0       0
   659 ;;Total ram usage:        3 bytes
   660 ;; Hardware stack levels required when called: 5
   661 ;; This function calls:
   662 ;;		_cadena
   663 ;;		_initUART
   664 ;;		_setup
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670     0360                     _main:	
   671                           ;psect for function _main
   672                           
   673     0360                     l1271:	
   674                           ;incstack = 0
   675                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   676                           
   677                           
   678                           ;PostLabC03.c: 90:     setup();
   679     0360  120A  118A  22C1  120A  118A  	fcall	_setup
   680                           
   681                           ;PostLabC03.c: 91:     initUART();
   682     0365  120A  118A  238D  120A  118A  	fcall	_initUART
   683     036A                     l1273:
   684                           
   685                           ;PostLabC03.c: 92:     cadena(menu);
   686     036A  30A0               	movlw	(low (_menu| 0))& (0+255)
   687     036B  1283               	bcf	3,5	;RP0=0, select bank0
   688     036C  1303               	bcf	3,6	;RP1=0, select bank0
   689     036D  00B9               	movwf	cadena@txt
   690     036E  3000               	movlw	0
   691     036F  00BA               	movwf	cadena@txt+1
   692     0370  120A  118A  21BD  120A  118A  	fcall	_cadena
   693     0375                     l112:
   694     0375  1283               	bcf	3,5	;RP0=0, select bank0
   695     0376  1303               	bcf	3,6	;RP1=0, select bank0
   696     0377  1E8C               	btfss	12,5	;volatile
   697     0378  2B7A               	goto	u681
   698     0379  2B7B               	goto	u680
   699     037A                     u681:
   700     037A  2B75               	goto	l112
   701     037B                     u680:
   702     037B                     l1275:
   703                           
   704                           ;PostLabC03.c: 98:         _delay((unsigned long)((500)*(8000000/4000.0)));
   705     037B  3006               	movlw	6
   706     037C  1283               	bcf	3,5	;RP0=0, select bank0
   707     037D  1303               	bcf	3,6	;RP1=0, select bank0
   708     037E  00C2               	movwf	??_main+2
   709     037F  3013               	movlw	19
   710     0380  00C1               	movwf	??_main+1
   711     0381  30AD               	movlw	173
   712     0382  00C0               	movwf	??_main
   713     0383                     u697:
   714     0383  0BC0               	decfsz	??_main,f
   715     0384  2B83               	goto	u697
   716     0385  0BC1               	decfsz	??_main+1,f
   717     0386  2B83               	goto	u697
   718     0387  0BC2               	decfsz	??_main+2,f
   719     0388  2B83               	goto	u697
   720     0389  2B75               	goto	l112
   721     038A  120A  118A  2812   	ljmp	start
   722     038D                     __end_of_main:
   723                           
   724                           	psect	text1
   725     02C1                     __ptext1:	
   726 ;; *************** function _setup *****************
   727 ;; Defined at:
   728 ;;		line 105 in file "PostLabC03.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0
   744 ;;      Temps:          0       2       0       0       0
   745 ;;      Totals:         0       2       0       0       0
   746 ;;Total ram usage:        2 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; Hardware stack levels required when called: 4
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756     02C1                     _setup:	
   757                           ;psect for function _setup
   758                           
   759     02C1                     l1185:	
   760                           ;incstack = 0
   761                           ; Regs used in _setup: [wreg+status,2+status,0]
   762                           
   763                           
   764                           ;PostLabC03.c: 107:     ANSEL = 0x1;
   765     02C1  3001               	movlw	1
   766     02C2  1683               	bsf	3,5	;RP0=1, select bank3
   767     02C3  1703               	bsf	3,6	;RP1=1, select bank3
   768     02C4  0088               	movwf	8	;volatile
   769     02C5                     l1187:
   770                           
   771                           ;PostLabC03.c: 108:     ANSELH = 0;
   772     02C5  0189               	clrf	9	;volatile
   773     02C6                     l1189:
   774                           
   775                           ;PostLabC03.c: 109:     TRISA = 0x1;
   776     02C6  3001               	movlw	1
   777     02C7  1683               	bsf	3,5	;RP0=1, select bank1
   778     02C8  1303               	bcf	3,6	;RP1=0, select bank1
   779     02C9  0085               	movwf	5	;volatile
   780                           
   781                           ;PostLabC03.c: 110:     TRISB = 0;
   782     02CA  0186               	clrf	6	;volatile
   783                           
   784                           ;PostLabC03.c: 111:     TRISD = 0;
   785     02CB  0188               	clrf	8	;volatile
   786                           
   787                           ;PostLabC03.c: 112:     TRISE = 0;
   788     02CC  0189               	clrf	9	;volatile
   789                           
   790                           ;PostLabC03.c: 115:     PORTA = 0;
   791     02CD  1283               	bcf	3,5	;RP0=0, select bank0
   792     02CE  1303               	bcf	3,6	;RP1=0, select bank0
   793     02CF  0185               	clrf	5	;volatile
   794                           
   795                           ;PostLabC03.c: 116:     PORTB = 0;
   796     02D0  0186               	clrf	6	;volatile
   797                           
   798                           ;PostLabC03.c: 117:     PORTD = 0;
   799     02D1  0188               	clrf	8	;volatile
   800                           
   801                           ;PostLabC03.c: 118:     PORTE = 0;
   802     02D2  0189               	clrf	9	;volatile
   803     02D3                     l1191:
   804                           
   805                           ;PostLabC03.c: 122:     OSCCON = 0X75;
   806     02D3  3075               	movlw	117
   807     02D4  1683               	bsf	3,5	;RP0=1, select bank1
   808     02D5  1303               	bcf	3,6	;RP1=0, select bank1
   809     02D6  008F               	movwf	15	;volatile
   810     02D7                     l1193:
   811                           
   812                           ;PostLabC03.c: 125:     GIE = 1;
   813     02D7  178B               	bsf	11,7	;volatile
   814     02D8                     l1195:
   815                           
   816                           ;PostLabC03.c: 126:     PEIE = 1;
   817     02D8  170B               	bsf	11,6	;volatile
   818     02D9                     l1197:
   819                           
   820                           ;PostLabC03.c: 127:     ADIE = 1;
   821     02D9  170C               	bsf	12,6	;volatile
   822     02DA                     l1199:
   823                           
   824                           ;PostLabC03.c: 128:     ADIF = 0;
   825     02DA  1283               	bcf	3,5	;RP0=0, select bank0
   826     02DB  1303               	bcf	3,6	;RP1=0, select bank0
   827     02DC  130C               	bcf	12,6	;volatile
   828     02DD                     l1201:
   829                           
   830                           ;PostLabC03.c: 131:     ADCON0bits.CHS = 0b0000;
   831     02DD  30C3               	movlw	-61
   832     02DE  059F               	andwf	31,f	;volatile
   833     02DF                     l1203:
   834                           
   835                           ;PostLabC03.c: 132:     ADCON1bits.VCFG0 = 0;
   836     02DF  1683               	bsf	3,5	;RP0=1, select bank1
   837     02E0  1303               	bcf	3,6	;RP1=0, select bank1
   838     02E1  121F               	bcf	31,4	;volatile
   839     02E2                     l1205:
   840                           
   841                           ;PostLabC03.c: 133:     ADCON1bits.VCFG1 = 0;
   842     02E2  129F               	bcf	31,5	;volatile
   843     02E3                     l1207:
   844                           
   845                           ;PostLabC03.c: 134:     ADCON0bits.ADCS = 0b10;
   846     02E3  1283               	bcf	3,5	;RP0=0, select bank0
   847     02E4  1303               	bcf	3,6	;RP1=0, select bank0
   848     02E5  081F               	movf	31,w	;volatile
   849     02E6  393F               	andlw	-193
   850     02E7  3880               	iorlw	128
   851     02E8  009F               	movwf	31	;volatile
   852     02E9                     l1209:
   853                           
   854                           ;PostLabC03.c: 136:     ADCON1bits.ADFM = 0;
   855     02E9  1683               	bsf	3,5	;RP0=1, select bank1
   856     02EA  1303               	bcf	3,6	;RP1=0, select bank1
   857     02EB  139F               	bcf	31,7	;volatile
   858     02EC                     l1211:
   859                           
   860                           ;PostLabC03.c: 137:     ADCON0bits.ADON = 1;
   861     02EC  1283               	bcf	3,5	;RP0=0, select bank0
   862     02ED  1303               	bcf	3,6	;RP1=0, select bank0
   863     02EE  141F               	bsf	31,0	;volatile
   864     02EF                     l1213:
   865                           
   866                           ;PostLabC03.c: 138:      _delay((unsigned long)((1)*(8000000/4000.0)));
   867     02EF  3003               	movlw	3
   868     02F0  1283               	bcf	3,5	;RP0=0, select bank0
   869     02F1  1303               	bcf	3,6	;RP1=0, select bank0
   870     02F2  00BA               	movwf	??_setup+1
   871     02F3  3097               	movlw	151
   872     02F4  00B9               	movwf	??_setup
   873     02F5                     u707:
   874     02F5  0BB9               	decfsz	??_setup,f
   875     02F6  2AF5               	goto	u707
   876     02F7  0BBA               	decfsz	??_setup+1,f
   877     02F8  2AF5               	goto	u707
   878     02F9                     l120:
   879     02F9  0008               	return
   880     02FA                     __end_of_setup:
   881                           
   882                           	psect	text2
   883     038D                     __ptext2:	
   884 ;; *************** function _initUART *****************
   885 ;; Defined at:
   886 ;;		line 144 in file "PostLabC03.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg, status,2
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   900 ;;      Params:         0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 4
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     038D                     _initUART:	
   915                           ;psect for function _initUART
   916                           
   917     038D                     l1217:	
   918                           ;incstack = 0
   919                           ; Regs used in _initUART: [wreg+status,2]
   920                           
   921                           
   922                           ;PostLabC03.c: 146:     SPBRG = 12;
   923     038D  300C               	movlw	12
   924     038E  1683               	bsf	3,5	;RP0=1, select bank1
   925     038F  1303               	bcf	3,6	;RP1=0, select bank1
   926     0390  0099               	movwf	25	;volatile
   927     0391                     l1219:
   928                           
   929                           ;PostLabC03.c: 147:     SPBRGH = 0;
   930     0391  019A               	clrf	26	;volatile
   931     0392                     l1221:
   932                           
   933                           ;PostLabC03.c: 148:     BRGH = 0;
   934     0392  1118               	bcf	24,2	;volatile
   935     0393                     l1223:
   936                           
   937                           ;PostLabC03.c: 149:     BRG16 = 0;
   938     0393  1683               	bsf	3,5	;RP0=1, select bank3
   939     0394  1703               	bsf	3,6	;RP1=1, select bank3
   940     0395  1187               	bcf	7,3	;volatile
   941     0396                     l1225:
   942                           
   943                           ;PostLabC03.c: 152:     CREN = 1;
   944     0396  1283               	bcf	3,5	;RP0=0, select bank0
   945     0397  1303               	bcf	3,6	;RP1=0, select bank0
   946     0398  1618               	bsf	24,4	;volatile
   947     0399                     l1227:
   948                           
   949                           ;PostLabC03.c: 153:     SYNC = 0;
   950     0399  1683               	bsf	3,5	;RP0=1, select bank1
   951     039A  1303               	bcf	3,6	;RP1=0, select bank1
   952     039B  1218               	bcf	24,4	;volatile
   953     039C                     l1229:
   954                           
   955                           ;PostLabC03.c: 154:     SPEN = 1;
   956     039C  1283               	bcf	3,5	;RP0=0, select bank0
   957     039D  1303               	bcf	3,6	;RP1=0, select bank0
   958     039E  1798               	bsf	24,7	;volatile
   959     039F                     l1231:
   960                           
   961                           ;PostLabC03.c: 155:     TXSTAbits.TXEN = 1;
   962     039F  1683               	bsf	3,5	;RP0=1, select bank1
   963     03A0  1303               	bcf	3,6	;RP1=0, select bank1
   964     03A1  1698               	bsf	24,5	;volatile
   965     03A2                     l1233:
   966                           
   967                           ;PostLabC03.c: 158:     RCSTAbits.RX9 = 0;
   968     03A2  1283               	bcf	3,5	;RP0=0, select bank0
   969     03A3  1303               	bcf	3,6	;RP1=0, select bank0
   970     03A4  1318               	bcf	24,6	;volatile
   971     03A5                     l1235:
   972                           
   973                           ;PostLabC03.c: 161:     TXEN = 1;
   974     03A5  1683               	bsf	3,5	;RP0=1, select bank1
   975     03A6  1303               	bcf	3,6	;RP1=0, select bank1
   976     03A7  1698               	bsf	24,5	;volatile
   977     03A8                     l1237:
   978                           
   979                           ;PostLabC03.c: 162:     TXIF = 0;
   980     03A8  1283               	bcf	3,5	;RP0=0, select bank0
   981     03A9  1303               	bcf	3,6	;RP1=0, select bank0
   982     03AA  120C               	bcf	12,4	;volatile
   983     03AB                     l1239:
   984                           
   985                           ;PostLabC03.c: 166:     PIE1bits.RCIE = 1;
   986     03AB  1683               	bsf	3,5	;RP0=1, select bank1
   987     03AC  1303               	bcf	3,6	;RP1=0, select bank1
   988     03AD  168C               	bsf	12,5	;volatile
   989     03AE                     l1241:
   990                           
   991                           ;PostLabC03.c: 167:     PIR1bits.RCIF = 0;
   992     03AE  1283               	bcf	3,5	;RP0=0, select bank0
   993     03AF  1303               	bcf	3,6	;RP1=0, select bank0
   994     03B0  128C               	bcf	12,5	;volatile
   995     03B1                     l123:
   996     03B1  0008               	return
   997     03B2                     __end_of_initUART:
   998                           
   999                           	psect	text3
  1000     01BD                     __ptext3:	
  1001 ;; *************** function _cadena *****************
  1002 ;; Defined at:
  1003 ;;		line 177 in file "PostLabC03.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  txt             2   25[BANK0 ] PTR unsigned char 
  1006 ;;		 -> STR_3(32), POT@CVPOT(4), STR_1(23), menu(48), 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;  i               2   30[BANK0 ] int 
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       2       0       0       0
  1019 ;;      Locals:         0       2       0       0       0
  1020 ;;      Temps:          0       3       0       0       0
  1021 ;;      Totals:         0       7       0       0       0
  1022 ;;Total ram usage:        7 bytes
  1023 ;; Hardware stack levels used: 1
  1024 ;; Hardware stack levels required when called: 4
  1025 ;; This function calls:
  1026 ;;		Nothing
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032     01BD                     _cadena:	
  1033                           ;psect for function _cadena
  1034                           
  1035     01BD                     l1173:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1038                           
  1039                           
  1040                           ;PostLabC03.c: 178:     int i;;PostLabC03.c: 180:     for(i = 0; txt[i] != '\0'; i++){
  1041     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1042     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1043     01BF  01BE               	clrf	cadena@i
  1044     01C0  01BF               	clrf	cadena@i+1
  1045     01C1  29E4               	goto	l1179
  1046     01C2                     l128:
  1047     01C2  1E0C               	btfss	12,4	;volatile
  1048     01C3  29C5               	goto	u591
  1049     01C4  29C6               	goto	u590
  1050     01C5                     u591:
  1051     01C5  29C2               	goto	l128
  1052     01C6                     u590:
  1053     01C6                     l1175:
  1054                           
  1055                           ;PostLabC03.c: 184:         TXREG = txt[i];
  1056     01C6  083E               	movf	cadena@i,w
  1057     01C7  0739               	addwf	cadena@txt,w
  1058     01C8  00BC               	movwf	??_cadena+1
  1059     01C9  083A               	movf	cadena@txt+1,w
  1060     01CA  00BB               	movwf	??_cadena
  1061     01CB  1803               	skipnc
  1062     01CC  0ABB               	incf	??_cadena,f
  1063     01CD  1FBE               	btfss	cadena@i,7
  1064     01CE  29D0               	goto	u600
  1065     01CF  03BB               	decf	??_cadena,f
  1066     01D0                     u600:
  1067     01D0  1283               	bcf	3,5	;RP0=0, select bank0
  1068     01D1  1303               	bcf	3,6	;RP1=0, select bank0
  1069     01D2  083B               	movf	??_cadena,w
  1070     01D3  00BD               	movwf	??_cadena+2
  1071     01D4  083D               	movf	??_cadena+2,w
  1072     01D5  00FF               	movwf	btemp+1
  1073     01D6  083C               	movf	??_cadena+1,w
  1074     01D7  0084               	movwf	4
  1075     01D8  120A  118A  2168  120A  118A  	fcall	stringtab
  1076     01DD  0099               	movwf	25	;volatile
  1077     01DE                     l1177:
  1078                           
  1079                           ;PostLabC03.c: 185:     }
  1080     01DE  3001               	movlw	1
  1081     01DF  07BE               	addwf	cadena@i,f
  1082     01E0  1803               	skipnc
  1083     01E1  0ABF               	incf	cadena@i+1,f
  1084     01E2  3000               	movlw	0
  1085     01E3  07BF               	addwf	cadena@i+1,f
  1086     01E4                     l1179:
  1087     01E4  083E               	movf	cadena@i,w
  1088     01E5  0739               	addwf	cadena@txt,w
  1089     01E6  00BC               	movwf	??_cadena+1
  1090     01E7  083A               	movf	cadena@txt+1,w
  1091     01E8  00BB               	movwf	??_cadena
  1092     01E9  1803               	skipnc
  1093     01EA  0ABB               	incf	??_cadena,f
  1094     01EB  1FBE               	btfss	cadena@i,7
  1095     01EC  29EE               	goto	u610
  1096     01ED  03BB               	decf	??_cadena,f
  1097     01EE                     u610:
  1098     01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1099     01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1100     01F0  083B               	movf	??_cadena,w
  1101     01F1  00BD               	movwf	??_cadena+2
  1102     01F2  083D               	movf	??_cadena+2,w
  1103     01F3  00FF               	movwf	btemp+1
  1104     01F4  083C               	movf	??_cadena+1,w
  1105     01F5  0084               	movwf	4
  1106     01F6  120A  118A  2168  120A  118A  	fcall	stringtab
  1107     01FB  3A00               	xorlw	0
  1108     01FC  1D03               	skipz
  1109     01FD  29FF               	goto	u621
  1110     01FE  2A00               	goto	u620
  1111     01FF                     u621:
  1112     01FF  29C2               	goto	l128
  1113     0200                     u620:
  1114     0200                     l132:
  1115     0200  0008               	return
  1116     0201                     __end_of_cadena:
  1117                           
  1118                           	psect	text4
  1119     0104                     __ptext4:	
  1120 ;; *************** function _isr *****************
  1121 ;; Defined at:
  1122 ;;		line 54 in file "PostLabC03.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          0       6       0       0       0
  1139 ;;      Totals:         0       6       0       0       0
  1140 ;;Total ram usage:        6 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 3
  1143 ;; This function calls:
  1144 ;;		_POT
  1145 ;;		_TXT
  1146 ;;		i1_cadena
  1147 ;; This function is called by:
  1148 ;;		Interrupt level 1
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152     0104                     _isr:	
  1153                           ;psect for function _isr
  1154                           
  1155     0104                     i1l1243:
  1156                           
  1157                           ;PostLabC03.c: 56:     if(PIR1bits.RCIF){
  1158     0104  1E8C               	btfss	12,5	;volatile
  1159     0105  2907               	goto	u64_21
  1160     0106  2908               	goto	u64_20
  1161     0107                     u64_21:
  1162     0107  294B               	goto	i1l95
  1163     0108                     u64_20:
  1164     0108                     i1l1245:
  1165                           
  1166                           ;PostLabC03.c: 57:         opcion = RCREG;
  1167     0108  081A               	movf	26,w	;volatile
  1168     0109  00C4               	movwf	_opcion
  1169                           
  1170                           ;PostLabC03.c: 59:         switch(opcion){
  1171     010A  293B               	goto	i1l1259
  1172     010B                     i1l1247:
  1173                           
  1174                           ;PostLabC03.c: 61:                 POT();
  1175     010B  120A  118A  22FA  120A  118A  	fcall	_POT
  1176                           
  1177                           ;PostLabC03.c: 62:                 cadena(menu);
  1178     0110  30A0               	movlw	(low (_menu| 0))& (0+255)
  1179     0111  00F0               	movwf	i1cadena@txt
  1180     0112  3000               	movlw	0
  1181     0113  00F1               	movwf	i1cadena@txt+1
  1182     0114  120A  118A  2245  120A  118A  	fcall	i1_cadena
  1183                           
  1184                           ;PostLabC03.c: 63:                 break;
  1185     0119  295B               	goto	i1l104
  1186     011A                     i1l1249:
  1187                           
  1188                           ;PostLabC03.c: 65:                 TXT();
  1189     011A  120A  118A  23C5  120A  118A  	fcall	_TXT
  1190     011F                     i1l1251:
  1191                           
  1192                           ;PostLabC03.c: 66:                 cadena(menu);
  1193     011F  30A0               	movlw	(low (_menu| 0))& (0+255)
  1194     0120  00F0               	movwf	i1cadena@txt
  1195     0121  3000               	movlw	0
  1196     0122  00F1               	movwf	i1cadena@txt+1
  1197     0123  120A  118A  2245  120A  118A  	fcall	i1_cadena
  1198                           
  1199                           ;PostLabC03.c: 67:                 break;
  1200     0128  295B               	goto	i1l104
  1201     0129                     i1l1253:
  1202                           
  1203                           ;PostLabC03.c: 70:                 cadena("No existe esa opcion \r");
  1204     0129  302B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1205     012A  00F0               	movwf	i1cadena@txt
  1206     012B  3080               	movlw	128
  1207     012C  00F1               	movwf	i1cadena@txt+1
  1208     012D  120A  118A  2245  120A  118A  	fcall	i1_cadena
  1209     0132                     i1l1255:	
  1210                           ;PostLabC03.c: 71:                 while(RCREG != 13);
  1211                           
  1212     0132  300D               	movlw	13
  1213     0133  1283               	bcf	3,5	;RP0=0, select bank0
  1214     0134  1303               	bcf	3,6	;RP1=0, select bank0
  1215     0135  061A               	xorwf	26,w	;volatile
  1216     0136  1D03               	btfss	3,2
  1217     0137  2939               	goto	u65_21
  1218     0138  293A               	goto	u65_20
  1219     0139                     u65_21:
  1220     0139  2932               	goto	i1l1255
  1221     013A                     u65_20:
  1222     013A  291F               	goto	i1l1251
  1223     013B                     i1l1259:
  1224     013B  0844               	movf	_opcion,w
  1225     013C  00B3               	movwf	??_isr
  1226     013D  01B4               	clrf	??_isr+1
  1227                           
  1228                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1229                           ; Switch size 1, requested type "simple"
  1230                           ; Number of cases is 1, Range of values is 0 to 0
  1231                           ; switch strategies available:
  1232                           ; Name         Instructions Cycles
  1233                           ; simple_byte            4     3 (average)
  1234                           ; direct_byte           11     8 (fixed)
  1235                           ; jumptable            260     6 (fixed)
  1236                           ;	Chosen strategy is simple_byte
  1237     013E  0834               	movf	??_isr+1,w
  1238     013F  3A00               	xorlw	0	; case 0
  1239     0140  1903               	skipnz
  1240     0141  2943               	goto	i1l1317
  1241     0142  2929               	goto	i1l1253
  1242     0143                     i1l1317:
  1243                           
  1244                           ; Switch size 1, requested type "simple"
  1245                           ; Number of cases is 2, Range of values is 49 to 50
  1246                           ; switch strategies available:
  1247                           ; Name         Instructions Cycles
  1248                           ; simple_byte            7     4 (average)
  1249                           ; direct_byte           17    11 (fixed)
  1250                           ; jumptable            263     9 (fixed)
  1251                           ;	Chosen strategy is simple_byte
  1252     0143  0833               	movf	??_isr,w
  1253     0144  3A31               	xorlw	49	; case 49
  1254     0145  1903               	skipnz
  1255     0146  290B               	goto	i1l1247
  1256     0147  3A03               	xorlw	3	; case 50
  1257     0148  1903               	skipnz
  1258     0149  291A               	goto	i1l1249
  1259     014A  2929               	goto	i1l1253
  1260     014B                     i1l95:	
  1261                           ;PostLabC03.c: 75:     }
  1262                           
  1263                           
  1264                           ;PostLabC03.c: 77:      if(ADIF)
  1265     014B  1F0C               	btfss	12,6	;volatile
  1266     014C  294E               	goto	u66_21
  1267     014D  294F               	goto	u66_20
  1268     014E                     u66_21:
  1269     014E  295B               	goto	i1l104
  1270     014F                     u66_20:
  1271     014F                     i1l1261:
  1272                           
  1273                           ;PostLabC03.c: 78:     {;PostLabC03.c: 79:         if (ADCON0bits.CHS == 0b0000)
  1274     014F  0C1F               	rrf	31,w	;volatile
  1275     0150  00B3               	movwf	??_isr
  1276     0151  0C33               	rrf	??_isr,w
  1277     0152  390F               	andlw	15
  1278     0153  3A00               	xorlw	0
  1279     0154  1D03               	skipz
  1280     0155  2957               	goto	u67_21
  1281     0156  2958               	goto	u67_20
  1282     0157                     u67_21:
  1283     0157  295A               	goto	i1l1265
  1284     0158                     u67_20:
  1285     0158                     i1l1263:
  1286                           
  1287                           ;PostLabC03.c: 80:             Vpot = ADRESH;
  1288     0158  081E               	movf	30,w	;volatile
  1289     0159  00C3               	movwf	_Vpot
  1290     015A                     i1l1265:
  1291                           
  1292                           ;PostLabC03.c: 82:        ADIF = 0;
  1293     015A  130C               	bcf	12,6	;volatile
  1294     015B                     i1l104:
  1295     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1296     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1297     015D  0838               	movf	??_isr+5,w
  1298     015E  00FF               	movwf	btemp+1
  1299     015F  0837               	movf	??_isr+4,w
  1300     0160  008A               	movwf	10
  1301     0161  0836               	movf	??_isr+3,w
  1302     0162  0084               	movwf	4
  1303     0163  0E35               	swapf	??_isr+2,w
  1304     0164  0083               	movwf	3
  1305     0165  0EFE               	swapf	btemp,f
  1306     0166  0E7E               	swapf	btemp,w
  1307     0167  0009               	retfie
  1308     0168                     __end_of_isr:
  1309                           
  1310                           	psect	intentry
  1311     0004                     __pintentry:	
  1312                           ;incstack = 0
  1313                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1314                           
  1315     0004                     interrupt_function:
  1316     007E                     saved_w	set	btemp
  1317     0004  00FE               	movwf	btemp
  1318     0005  0E03               	swapf	3,w
  1319     0006  1283               	bcf	3,5	;RP0=0, select bank0
  1320     0007  1303               	bcf	3,6	;RP1=0, select bank0
  1321     0008  00B5               	movwf	??_isr+2
  1322     0009  0804               	movf	4,w
  1323     000A  00B6               	movwf	??_isr+3
  1324     000B  080A               	movf	10,w
  1325     000C  00B7               	movwf	??_isr+4
  1326     000D  087F               	movf	btemp+1,w
  1327     000E  00B8               	movwf	??_isr+5
  1328     000F  120A  118A  2904   	ljmp	_isr
  1329                           
  1330                           	psect	text5
  1331     03C5                     __ptext5:	
  1332 ;; *************** function _TXT *****************
  1333 ;; Defined at:
  1334 ;;		line 203 in file "PostLabC03.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;		None
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  caracter        1    0[COMMON] unsigned char 
  1339 ;; Return value:  Size  Location     Type
  1340 ;;                  1    wreg      void 
  1341 ;; Registers used:
  1342 ;;		wreg
  1343 ;; Tracked objects:
  1344 ;;		On entry : 0/0
  1345 ;;		On exit  : 0/0
  1346 ;;		Unchanged: 0/0
  1347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1348 ;;      Params:         0       0       0       0       0
  1349 ;;      Locals:         1       0       0       0       0
  1350 ;;      Temps:          0       0       0       0       0
  1351 ;;      Totals:         1       0       0       0       0
  1352 ;;Total ram usage:        1 bytes
  1353 ;; Hardware stack levels used: 1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_isr
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361     03C5                     _TXT:	
  1362                           ;psect for function _TXT
  1363                           
  1364     03C5                     i1l1181:	
  1365                           ;incstack = 0
  1366                           ; Regs used in _TXT: [wreg]
  1367                           
  1368     03C5                     i1l138:	
  1369                           ;PostLabC03.c: 205:     while(!PIR1bits.RCIF);
  1370                           
  1371     03C5  1283               	bcf	3,5	;RP0=0, select bank0
  1372     03C6  1303               	bcf	3,6	;RP1=0, select bank0
  1373     03C7  1E8C               	btfss	12,5	;volatile
  1374     03C8  2BCA               	goto	u63_21
  1375     03C9  2BCB               	goto	u63_20
  1376     03CA                     u63_21:
  1377     03CA  2BC5               	goto	i1l138
  1378     03CB                     u63_20:
  1379     03CB                     i1l1183:
  1380                           
  1381                           ;PostLabC03.c: 206:     char caracter = RCREG;
  1382     03CB  081A               	movf	26,w	;volatile
  1383     03CC  00F0               	movwf	TXT@caracter
  1384                           
  1385                           ;PostLabC03.c: 207:     TXREG = caracter;
  1386     03CD  0870               	movf	TXT@caracter,w
  1387     03CE  0099               	movwf	25	;volatile
  1388                           
  1389                           ;PostLabC03.c: 208:     TXREG ='\r';
  1390     03CF  300D               	movlw	13
  1391     03D0  0099               	movwf	25	;volatile
  1392                           
  1393                           ;PostLabC03.c: 209:     PORTB = caracter;
  1394     03D1  0870               	movf	TXT@caracter,w
  1395     03D2  0086               	movwf	6	;volatile
  1396     03D3                     i1l141:
  1397     03D3  0008               	return
  1398     03D4                     __end_of_TXT:
  1399                           
  1400                           	psect	text6
  1401     02FA                     __ptext6:	
  1402 ;; *************** function _POT *****************
  1403 ;; Defined at:
  1404 ;;		line 189 in file "PostLabC03.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;		None
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  CVPOT           4   15[BANK0 ] unsigned char [4]
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1418 ;;      Params:         0       0       0       0       0
  1419 ;;      Locals:         0       4       0       0       0
  1420 ;;      Temps:          0       2       0       0       0
  1421 ;;      Totals:         0       6       0       0       0
  1422 ;;Total ram usage:        6 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 2
  1425 ;; This function calls:
  1426 ;;		_sprintf
  1427 ;;		i1_cadena
  1428 ;; This function is called by:
  1429 ;;		_isr
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433     02FA                     _POT:	
  1434                           ;psect for function _POT
  1435                           
  1436     02FA                     i1l1157:	
  1437                           ;incstack = 0
  1438                           ; Regs used in _POT: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1439                           
  1440     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1441     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1442     02FC  141F               	bsf	31,0	;volatile
  1443     02FD                     i1l1159:
  1444                           
  1445                           ;PostLabC03.c: 191:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1446     02FD  301A               	movlw	26
  1447     02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1448     02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1449     0300  00AE               	movwf	??_POT+1
  1450     0301  30F7               	movlw	247
  1451     0302  00AD               	movwf	??_POT
  1452     0303                     u71_27:
  1453     0303  0BAD               	decfsz	??_POT,f
  1454     0304  2B03               	goto	u71_27
  1455     0305  0BAE               	decfsz	??_POT+1,f
  1456     0306  2B03               	goto	u71_27
  1457     0307  2B08               	nop2
  1458     0308                     i1l1161:
  1459                           
  1460                           ;PostLabC03.c: 192:         ADCON0bits.GO = 1;
  1461     0308  1283               	bcf	3,5	;RP0=0, select bank0
  1462     0309  1303               	bcf	3,6	;RP1=0, select bank0
  1463     030A  149F               	bsf	31,1	;volatile
  1464     030B                     i1l1163:
  1465                           
  1466                           ;PostLabC03.c: 194:         char CVPOT[4];;PostLabC03.c: 195:         sprintf(CVPOT, "%d
      +                          \r", Vpot);
  1467     030B  3042               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1468     030C  00A0               	movwf	sprintf@f
  1469     030D  0843               	movf	_Vpot,w
  1470     030E  00AD               	movwf	??_POT
  1471     030F  01AE               	clrf	??_POT+1
  1472     0310  082D               	movf	??_POT,w
  1473     0311  00A1               	movwf	?_sprintf+1
  1474     0312  082E               	movf	??_POT+1,w
  1475     0313  00A2               	movwf	?_sprintf+2
  1476     0314  302F               	movlw	(low (POT@CVPOT| 0))& (0+255)
  1477     0315  120A  118A  202A  120A  118A  	fcall	_sprintf
  1478     031A                     i1l1165:
  1479                           
  1480                           ;PostLabC03.c: 197:         cadena("El valor del potenciometro es:\r");
  1481     031A  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1482     031B  00F0               	movwf	i1cadena@txt
  1483     031C  3080               	movlw	128
  1484     031D  00F1               	movwf	i1cadena@txt+1
  1485     031E  120A  118A  2245  120A  118A  	fcall	i1_cadena
  1486     0323                     i1l1167:
  1487                           
  1488                           ;PostLabC03.c: 198:         cadena(CVPOT);
  1489     0323  302F               	movlw	(low (POT@CVPOT| 0))& (0+255)
  1490     0324  00F0               	movwf	i1cadena@txt
  1491     0325  3000               	movlw	0
  1492     0326  00F1               	movwf	i1cadena@txt+1
  1493     0327  120A  118A  2245  120A  118A  	fcall	i1_cadena
  1494     032C                     i1l1169:
  1495                           
  1496                           ;PostLabC03.c: 199:         ADON = 0;
  1497     032C  1283               	bcf	3,5	;RP0=0, select bank0
  1498     032D  1303               	bcf	3,6	;RP1=0, select bank0
  1499     032E  101F               	bcf	31,0	;volatile
  1500     032F                     i1l135:
  1501     032F  0008               	return
  1502     0330                     __end_of_POT:
  1503                           
  1504                           	psect	text7
  1505     0245                     __ptext7:	
  1506 ;; *************** function i1_cadena *****************
  1507 ;; Defined at:
  1508 ;;		line 177 in file "PostLabC03.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  txt             2    0[COMMON] PTR unsigned char 
  1511 ;;		 -> STR_3(32), POT@CVPOT(4), STR_1(23), menu(48), 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  i               2    5[COMMON] int 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1523 ;;      Params:         2       0       0       0       0
  1524 ;;      Locals:         2       0       0       0       0
  1525 ;;      Temps:          3       0       0       0       0
  1526 ;;      Totals:         7       0       0       0       0
  1527 ;;Total ram usage:        7 bytes
  1528 ;; Hardware stack levels used: 2
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_isr
  1533 ;;		_POT
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537     0245                     i1_cadena:	
  1538                           ;psect for function i1_cadena
  1539                           
  1540     0245                     i1l1149:	
  1541                           ;incstack = 0
  1542                           ; Regs used in i1_cadena: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1543                           
  1544                           
  1545                           ;PostLabC03.c: 178:     int i;;PostLabC03.c: 180:     for(i = 0; txt[i] != '\0'; i++){
  1546     0245  01F5               	clrf	i1cadena@i
  1547     0246  01F6               	clrf	i1cadena@i+1
  1548     0247  2A6A               	goto	i1l1155
  1549     0248                     i1l128:
  1550     0248  1E0C               	btfss	12,4	;volatile
  1551     0249  2A4B               	goto	u55_21
  1552     024A  2A4C               	goto	u55_20
  1553     024B                     u55_21:
  1554     024B  2A48               	goto	i1l128
  1555     024C                     u55_20:
  1556     024C                     i1l1151:
  1557                           
  1558                           ;PostLabC03.c: 184:         TXREG = txt[i];
  1559     024C  0875               	movf	i1cadena@i,w
  1560     024D  0770               	addwf	i1cadena@txt,w
  1561     024E  00F3               	movwf	??i1_cadena+1
  1562     024F  0871               	movf	i1cadena@txt+1,w
  1563     0250  00F2               	movwf	??i1_cadena
  1564     0251  1803               	skipnc
  1565     0252  0AF2               	incf	??i1_cadena,f
  1566     0253  1FF5               	btfss	i1cadena@i,7
  1567     0254  2A56               	goto	u56_20
  1568     0255  03F2               	decf	??i1_cadena,f
  1569     0256                     u56_20:
  1570     0256  0872               	movf	??i1_cadena,w
  1571     0257  00F4               	movwf	??i1_cadena+2
  1572     0258  0874               	movf	??i1_cadena+2,w
  1573     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1574     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1575     025B  00FF               	movwf	btemp+1
  1576     025C  0873               	movf	??i1_cadena+1,w
  1577     025D  0084               	movwf	4
  1578     025E  120A  118A  2168  120A  118A  	fcall	stringtab
  1579     0263  0099               	movwf	25	;volatile
  1580     0264                     i1l1153:
  1581                           
  1582                           ;PostLabC03.c: 185:     }
  1583     0264  3001               	movlw	1
  1584     0265  07F5               	addwf	i1cadena@i,f
  1585     0266  1803               	skipnc
  1586     0267  0AF6               	incf	i1cadena@i+1,f
  1587     0268  3000               	movlw	0
  1588     0269  07F6               	addwf	i1cadena@i+1,f
  1589     026A                     i1l1155:
  1590     026A  0875               	movf	i1cadena@i,w
  1591     026B  0770               	addwf	i1cadena@txt,w
  1592     026C  00F3               	movwf	??i1_cadena+1
  1593     026D  0871               	movf	i1cadena@txt+1,w
  1594     026E  00F2               	movwf	??i1_cadena
  1595     026F  1803               	skipnc
  1596     0270  0AF2               	incf	??i1_cadena,f
  1597     0271  1FF5               	btfss	i1cadena@i,7
  1598     0272  2A74               	goto	u57_20
  1599     0273  03F2               	decf	??i1_cadena,f
  1600     0274                     u57_20:
  1601     0274  0872               	movf	??i1_cadena,w
  1602     0275  00F4               	movwf	??i1_cadena+2
  1603     0276  0874               	movf	??i1_cadena+2,w
  1604     0277  1283               	bcf	3,5	;RP0=0, select bank0
  1605     0278  1303               	bcf	3,6	;RP1=0, select bank0
  1606     0279  00FF               	movwf	btemp+1
  1607     027A  0873               	movf	??i1_cadena+1,w
  1608     027B  0084               	movwf	4
  1609     027C  120A  118A  2168  120A  118A  	fcall	stringtab
  1610     0281  3A00               	xorlw	0
  1611     0282  1D03               	skipz
  1612     0283  2A85               	goto	u58_21
  1613     0284  2A86               	goto	u58_20
  1614     0285                     u58_21:
  1615     0285  2A48               	goto	i1l128
  1616     0286                     u58_20:
  1617     0286                     i1l132:
  1618     0286  0008               	return
  1619     0287                     __end_ofi1_cadena:
  1620                           
  1621                           	psect	text8
  1622     002A                     __ptext8:	
  1623 ;; *************** function _sprintf *****************
  1624 ;; Defined at:
  1625 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  sp              1    wreg     PTR unsigned char 
  1628 ;;		 -> POT@CVPOT(4), 
  1629 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1630 ;;		 -> STR_2(4), 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1633 ;;		 -> POT@CVPOT(4), 
  1634 ;;  tmpval          4    0        struct .
  1635 ;;  val             2    9[BANK0 ] unsigned int 
  1636 ;;  cp              2    0        PTR const unsigned char 
  1637 ;;  len             2    0        unsigned int 
  1638 ;;  c               1   12[BANK0 ] unsigned char 
  1639 ;;  prec            1    8[BANK0 ] char 
  1640 ;;  flag            1    7[BANK0 ] unsigned char 
  1641 ;;  ap              1    6[BANK0 ] PTR void [1]
  1642 ;;		 -> ?_sprintf(2), 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  2    0[BANK0 ] int 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       3       0       0       0
  1653 ;;      Locals:         0       7       0       0       0
  1654 ;;      Temps:          0       3       0       0       0
  1655 ;;      Totals:         0      13       0       0       0
  1656 ;;Total ram usage:       13 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 1
  1659 ;; This function calls:
  1660 ;;		___lwdiv
  1661 ;;		___lwmod
  1662 ;; This function is called by:
  1663 ;;		_POT
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667     002A                     _sprintf:	
  1668                           ;psect for function _sprintf
  1669                           
  1670                           
  1671                           ;incstack = 0
  1672                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1673                           ;sprintf@sp stored from wreg
  1674     002A  1283               	bcf	3,5	;RP0=0, select bank0
  1675     002B  1303               	bcf	3,6	;RP1=0, select bank0
  1676     002C  00AB               	movwf	sprintf@sp
  1677     002D                     i1l1087:
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1680     002D  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1681     002E  00A6               	movwf	sprintf@ap
  1682                           
  1683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1684     002F  28EF               	goto	i1l1139
  1685     0030                     i1l1089:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1688     0030  3025               	movlw	37
  1689     0031  062C               	xorwf	sprintf@c,w
  1690     0032  1903               	btfsc	3,2
  1691     0033  2835               	goto	u48_21
  1692     0034  2836               	goto	u48_20
  1693     0035                     u48_21:
  1694     0035  2840               	goto	i1l1095
  1695     0036                     u48_20:
  1696     0036                     i1l1091:
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1699     0036  082B               	movf	sprintf@sp,w
  1700     0037  0084               	movwf	4
  1701     0038  082C               	movf	sprintf@c,w
  1702     0039  1383               	bcf	3,7	;select IRP bank0
  1703     003A  0080               	movwf	0
  1704     003B                     i1l1093:
  1705     003B  3001               	movlw	1
  1706     003C  00A3               	movwf	??_sprintf
  1707     003D  0823               	movf	??_sprintf,w
  1708     003E  07AB               	addwf	sprintf@sp,f
  1709                           
  1710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1711     003F  28EF               	goto	i1l1139
  1712     0040                     i1l1095:
  1713                           
  1714                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1715     0040  01A7               	clrf	sprintf@flag
  1716     0041                     i1l1099:	
  1717                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1718                           
  1719     0041  3001               	movlw	1
  1720     0042  07A0               	addwf	sprintf@f,f
  1721     0043  30FF               	movlw	-1
  1722     0044  0720               	addwf	sprintf@f,w
  1723     0045  0084               	movwf	4
  1724     0046  120A  118A  2172  120A  118A  	fcall	stringdir
  1725     004B  00AC               	movwf	sprintf@c
  1726     004C  00A3               	movwf	??_sprintf
  1727     004D  01A4               	clrf	??_sprintf+1
  1728                           
  1729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 1, Range of values is 0 to 0
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            4     3 (average)
  1735                           ; direct_byte           11     8 (fixed)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738     004E  0824               	movf	??_sprintf+1,w
  1739     004F  3A00               	xorlw	0	; case 0
  1740     0050  1903               	skipnz
  1741     0051  2853               	goto	i1l1319
  1742     0052  28EF               	goto	i1l1139
  1743     0053                     i1l1319:
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 3, Range of values is 0 to 105
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte           10     6 (average)
  1750                           ; jumptable            260     6 (fixed)
  1751                           ;	Chosen strategy is simple_byte
  1752     0053  0823               	movf	??_sprintf,w
  1753     0054  3A00               	xorlw	0	; case 0
  1754     0055  1903               	skipnz
  1755     0056  28FF               	goto	i1l1141
  1756     0057  3A64               	xorlw	100	; case 100
  1757     0058  1903               	skipnz
  1758     0059  285E               	goto	i1l1101
  1759     005A  3A0D               	xorlw	13	; case 105
  1760     005B  1903               	skipnz
  1761     005C  285E               	goto	i1l1101
  1762     005D  28EF               	goto	i1l1139
  1763     005E                     i1l1101:
  1764                           
  1765                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1766     005E  0826               	movf	sprintf@ap,w
  1767     005F  0084               	movwf	4
  1768     0060  1383               	bcf	3,7	;select IRP bank0
  1769     0061  0800               	movf	0,w
  1770     0062  00A9               	movwf	sprintf@val
  1771     0063  0A84               	incf	4,f
  1772     0064  0800               	movf	0,w
  1773     0065  00AA               	movwf	sprintf@val+1
  1774     0066                     i1l1103:
  1775     0066  3002               	movlw	2
  1776     0067  00A3               	movwf	??_sprintf
  1777     0068  0823               	movf	??_sprintf,w
  1778     0069  07A6               	addwf	sprintf@ap,f
  1779     006A                     i1l1105:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1782     006A  1FAA               	btfss	sprintf@val+1,7
  1783     006B  286D               	goto	u49_21
  1784     006C  286E               	goto	u49_20
  1785     006D                     u49_21:
  1786     006D  2877               	goto	i1l1111
  1787     006E                     u49_20:
  1788     006E                     i1l1107:
  1789                           
  1790                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1791     006E  3003               	movlw	3
  1792     006F  00A3               	movwf	??_sprintf
  1793     0070  0823               	movf	??_sprintf,w
  1794     0071  04A7               	iorwf	sprintf@flag,f
  1795     0072                     i1l1109:
  1796                           
  1797                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1798     0072  09A9               	comf	sprintf@val,f
  1799     0073  09AA               	comf	sprintf@val+1,f
  1800     0074  0AA9               	incf	sprintf@val,f
  1801     0075  1903               	skipnz
  1802     0076  0AAA               	incf	sprintf@val+1,f
  1803     0077                     i1l1111:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1806     0077  01AC               	clrf	sprintf@c
  1807     0078  0AAC               	incf	sprintf@c,f
  1808     0079                     i1l1117:
  1809                           
  1810                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1811     0079  082C               	movf	sprintf@c,w
  1812     007A  00A3               	movwf	??_sprintf
  1813     007B  0723               	addwf	??_sprintf,w
  1814     007C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1815     007D  0084               	movwf	4
  1816     007E  120A  118A  2172  120A  118A  	fcall	stringdir
  1817     0083  00A4               	movwf	??_sprintf+1
  1818     0084  120A  118A  2172  120A  118A  	fcall	stringdir
  1819     0089  00A5               	movwf	??_sprintf+2
  1820     008A  0825               	movf	??_sprintf+2,w
  1821     008B  022A               	subwf	sprintf@val+1,w
  1822     008C  1D03               	skipz
  1823     008D  2890               	goto	u50_25
  1824     008E  0824               	movf	??_sprintf+1,w
  1825     008F  0229               	subwf	sprintf@val,w
  1826     0090                     u50_25:
  1827     0090  1803               	skipnc
  1828     0091  2893               	goto	u50_21
  1829     0092  2894               	goto	u50_20
  1830     0093                     u50_21:
  1831     0093  2895               	goto	i1l1121
  1832     0094                     u50_20:
  1833     0094  289F               	goto	i1l1123
  1834     0095                     i1l1121:
  1835     0095  3001               	movlw	1
  1836     0096  00A3               	movwf	??_sprintf
  1837     0097  0823               	movf	??_sprintf,w
  1838     0098  07AC               	addwf	sprintf@c,f
  1839     0099  3005               	movlw	5
  1840     009A  062C               	xorwf	sprintf@c,w
  1841     009B  1D03               	btfss	3,2
  1842     009C  289E               	goto	u51_21
  1843     009D  289F               	goto	u51_20
  1844     009E                     u51_21:
  1845     009E  2879               	goto	i1l1117
  1846     009F                     u51_20:
  1847     009F                     i1l1123:
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1850     009F  0827               	movf	sprintf@flag,w
  1851     00A0  3903               	andlw	3
  1852     00A1  1903               	btfsc	3,2
  1853     00A2  28A4               	goto	u52_21
  1854     00A3  28A5               	goto	u52_20
  1855     00A4                     u52_21:
  1856     00A4  28AE               	goto	i1l1129
  1857     00A5                     u52_20:
  1858     00A5                     i1l1125:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1861     00A5  082B               	movf	sprintf@sp,w
  1862     00A6  0084               	movwf	4
  1863     00A7  302D               	movlw	45
  1864     00A8  1383               	bcf	3,7	;select IRP bank0
  1865     00A9  0080               	movwf	0
  1866     00AA                     i1l1127:
  1867     00AA  3001               	movlw	1
  1868     00AB  00A3               	movwf	??_sprintf
  1869     00AC  0823               	movf	??_sprintf,w
  1870     00AD  07AB               	addwf	sprintf@sp,f
  1871     00AE                     i1l1129:
  1872                           
  1873                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1874     00AE  082C               	movf	sprintf@c,w
  1875     00AF  00A8               	movwf	sprintf@prec
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1878     00B0  28E6               	goto	i1l1137
  1879     00B1                     i1l1131:
  1880                           
  1881                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1882     00B1  300A               	movlw	10
  1883     00B2  00F8               	movwf	___lwmod@divisor
  1884     00B3  3000               	movlw	0
  1885     00B4  00F9               	movwf	___lwmod@divisor+1
  1886     00B5  0828               	movf	sprintf@prec,w
  1887     00B6  00A3               	movwf	??_sprintf
  1888     00B7  0723               	addwf	??_sprintf,w
  1889     00B8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1890     00B9  0084               	movwf	4
  1891     00BA  120A  118A  2172  120A  118A  	fcall	stringdir
  1892     00BF  00F0               	movwf	___lwdiv@divisor
  1893     00C0  120A  118A  2172  120A  118A  	fcall	stringdir
  1894     00C5  00F1               	movwf	___lwdiv@divisor+1
  1895     00C6  082A               	movf	sprintf@val+1,w
  1896     00C7  00F3               	movwf	___lwdiv@dividend+1
  1897     00C8  0829               	movf	sprintf@val,w
  1898     00C9  00F2               	movwf	___lwdiv@dividend
  1899     00CA  120A  118A  2201  120A  118A  	fcall	___lwdiv
  1900     00CF  0871               	movf	?___lwdiv+1,w
  1901     00D0  00FB               	movwf	___lwmod@dividend+1
  1902     00D1  0870               	movf	?___lwdiv,w
  1903     00D2  00FA               	movwf	___lwmod@dividend
  1904     00D3  120A  118A  2287  120A  118A  	fcall	___lwmod
  1905     00D8  0878               	movf	?___lwmod,w
  1906     00D9  3E30               	addlw	48
  1907     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1908     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1909     00DC  00AC               	movwf	sprintf@c
  1910     00DD                     i1l1133:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1913     00DD  082B               	movf	sprintf@sp,w
  1914     00DE  0084               	movwf	4
  1915     00DF  082C               	movf	sprintf@c,w
  1916     00E0  1383               	bcf	3,7	;select IRP bank0
  1917     00E1  0080               	movwf	0
  1918     00E2                     i1l1135:
  1919     00E2  3001               	movlw	1
  1920     00E3  00A3               	movwf	??_sprintf
  1921     00E4  0823               	movf	??_sprintf,w
  1922     00E5  07AB               	addwf	sprintf@sp,f
  1923     00E6                     i1l1137:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1926     00E6  30FF               	movlw	255
  1927     00E7  00A3               	movwf	??_sprintf
  1928     00E8  0823               	movf	??_sprintf,w
  1929     00E9  07A8               	addwf	sprintf@prec,f
  1930     00EA  0A28               	incf	sprintf@prec,w
  1931     00EB  1D03               	btfss	3,2
  1932     00EC  28EE               	goto	u53_21
  1933     00ED  28EF               	goto	u53_20
  1934     00EE                     u53_21:
  1935     00EE  28B1               	goto	i1l1131
  1936     00EF                     u53_20:
  1937     00EF                     i1l1139:
  1938                           
  1939                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1940     00EF  3001               	movlw	1
  1941     00F0  07A0               	addwf	sprintf@f,f
  1942     00F1  30FF               	movlw	-1
  1943     00F2  0720               	addwf	sprintf@f,w
  1944     00F3  0084               	movwf	4
  1945     00F4  120A  118A  2172  120A  118A  	fcall	stringdir
  1946     00F9  00AC               	movwf	sprintf@c
  1947     00FA  082C               	movf	sprintf@c,w
  1948     00FB  1D03               	btfss	3,2
  1949     00FC  28FE               	goto	u54_21
  1950     00FD  28FF               	goto	u54_20
  1951     00FE                     u54_21:
  1952     00FE  2830               	goto	i1l1089
  1953     00FF                     u54_20:
  1954     00FF                     i1l1141:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1957     00FF  082B               	movf	sprintf@sp,w
  1958     0100  0084               	movwf	4
  1959     0101  1383               	bcf	3,7	;select IRP bank0
  1960     0102  0180               	clrf	0
  1961     0103                     i1l251:
  1962     0103  0008               	return
  1963     0104                     __end_of_sprintf:
  1964                           
  1965                           	psect	text9
  1966     0287                     __ptext9:	
  1967 ;; *************** function ___lwmod *****************
  1968 ;; Defined at:
  1969 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  divisor         2    8[COMMON] unsigned int 
  1972 ;;  dividend        2   10[COMMON] unsigned int 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  counter         1   13[COMMON] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  2    8[COMMON] unsigned int 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         4       0       0       0       0
  1985 ;;      Locals:         1       0       0       0       0
  1986 ;;      Temps:          1       0       0       0       0
  1987 ;;      Totals:         6       0       0       0       0
  1988 ;;Total ram usage:        6 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_sprintf
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997     0287                     ___lwmod:	
  1998                           ;psect for function ___lwmod
  1999                           
  2000     0287                     i1l1065:	
  2001                           ;incstack = 0
  2002                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2003                           
  2004     0287  0878               	movf	___lwmod@divisor,w
  2005     0288  0479               	iorwf	___lwmod@divisor+1,w
  2006     0289  1903               	btfsc	3,2
  2007     028A  2A8C               	goto	u42_21
  2008     028B  2A8D               	goto	u42_20
  2009     028C                     u42_21:
  2010     028C  2ABC               	goto	i1l1083
  2011     028D                     u42_20:
  2012     028D                     i1l1067:
  2013     028D  01FD               	clrf	___lwmod@counter
  2014     028E  0AFD               	incf	___lwmod@counter,f
  2015     028F  2A9B               	goto	i1l1073
  2016     0290                     i1l1069:
  2017     0290  3001               	movlw	1
  2018     0291                     u43_25:
  2019     0291  1003               	clrc
  2020     0292  0DF8               	rlf	___lwmod@divisor,f
  2021     0293  0DF9               	rlf	___lwmod@divisor+1,f
  2022     0294  3EFF               	addlw	-1
  2023     0295  1D03               	skipz
  2024     0296  2A91               	goto	u43_25
  2025     0297                     i1l1071:
  2026     0297  3001               	movlw	1
  2027     0298  00FC               	movwf	??___lwmod
  2028     0299  087C               	movf	??___lwmod,w
  2029     029A  07FD               	addwf	___lwmod@counter,f
  2030     029B                     i1l1073:
  2031     029B  1FF9               	btfss	___lwmod@divisor+1,7
  2032     029C  2A9E               	goto	u44_21
  2033     029D  2A9F               	goto	u44_20
  2034     029E                     u44_21:
  2035     029E  2A90               	goto	i1l1069
  2036     029F                     u44_20:
  2037     029F                     i1l1075:
  2038     029F  0879               	movf	___lwmod@divisor+1,w
  2039     02A0  027B               	subwf	___lwmod@dividend+1,w
  2040     02A1  1D03               	skipz
  2041     02A2  2AA5               	goto	u45_25
  2042     02A3  0878               	movf	___lwmod@divisor,w
  2043     02A4  027A               	subwf	___lwmod@dividend,w
  2044     02A5                     u45_25:
  2045     02A5  1C03               	skipc
  2046     02A6  2AA8               	goto	u45_21
  2047     02A7  2AA9               	goto	u45_20
  2048     02A8                     u45_21:
  2049     02A8  2AAF               	goto	i1l1079
  2050     02A9                     u45_20:
  2051     02A9                     i1l1077:
  2052     02A9  0878               	movf	___lwmod@divisor,w
  2053     02AA  02FA               	subwf	___lwmod@dividend,f
  2054     02AB  0879               	movf	___lwmod@divisor+1,w
  2055     02AC  1C03               	skipc
  2056     02AD  03FB               	decf	___lwmod@dividend+1,f
  2057     02AE  02FB               	subwf	___lwmod@dividend+1,f
  2058     02AF                     i1l1079:
  2059     02AF  3001               	movlw	1
  2060     02B0                     u46_25:
  2061     02B0  1003               	clrc
  2062     02B1  0CF9               	rrf	___lwmod@divisor+1,f
  2063     02B2  0CF8               	rrf	___lwmod@divisor,f
  2064     02B3  3EFF               	addlw	-1
  2065     02B4  1D03               	skipz
  2066     02B5  2AB0               	goto	u46_25
  2067     02B6                     i1l1081:
  2068     02B6  3001               	movlw	1
  2069     02B7  02FD               	subwf	___lwmod@counter,f
  2070     02B8  1D03               	btfss	3,2
  2071     02B9  2ABB               	goto	u47_21
  2072     02BA  2ABC               	goto	u47_20
  2073     02BB                     u47_21:
  2074     02BB  2A9F               	goto	i1l1075
  2075     02BC                     u47_20:
  2076     02BC                     i1l1083:
  2077     02BC  087B               	movf	___lwmod@dividend+1,w
  2078     02BD  00F9               	movwf	?___lwmod+1
  2079     02BE  087A               	movf	___lwmod@dividend,w
  2080     02BF  00F8               	movwf	?___lwmod
  2081     02C0                     i1l537:
  2082     02C0  0008               	return
  2083     02C1                     __end_of___lwmod:
  2084                           
  2085                           	psect	text10
  2086     0201                     __ptext10:	
  2087 ;; *************** function ___lwdiv *****************
  2088 ;; Defined at:
  2089 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  divisor         2    0[COMMON] unsigned int 
  2092 ;;  dividend        2    2[COMMON] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        2    5[COMMON] unsigned int 
  2095 ;;  counter         1    7[COMMON] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2    0[COMMON] unsigned int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         4       0       0       0       0
  2106 ;;      Locals:         3       0       0       0       0
  2107 ;;      Temps:          1       0       0       0       0
  2108 ;;      Totals:         8       0       0       0       0
  2109 ;;Total ram usage:        8 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_sprintf
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118     0201                     ___lwdiv:	
  2119                           ;psect for function ___lwdiv
  2120                           
  2121     0201                     i1l1039:	
  2122                           ;incstack = 0
  2123                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2124                           
  2125     0201  01F5               	clrf	___lwdiv@quotient
  2126     0202  01F6               	clrf	___lwdiv@quotient+1
  2127     0203                     i1l1041:
  2128     0203  0870               	movf	___lwdiv@divisor,w
  2129     0204  0471               	iorwf	___lwdiv@divisor+1,w
  2130     0205  1903               	btfsc	3,2
  2131     0206  2A08               	goto	u35_21
  2132     0207  2A09               	goto	u35_20
  2133     0208                     u35_21:
  2134     0208  2A40               	goto	i1l1061
  2135     0209                     u35_20:
  2136     0209                     i1l1043:
  2137     0209  01F7               	clrf	___lwdiv@counter
  2138     020A  0AF7               	incf	___lwdiv@counter,f
  2139     020B  2A17               	goto	i1l1049
  2140     020C                     i1l1045:
  2141     020C  3001               	movlw	1
  2142     020D                     u36_25:
  2143     020D  1003               	clrc
  2144     020E  0DF0               	rlf	___lwdiv@divisor,f
  2145     020F  0DF1               	rlf	___lwdiv@divisor+1,f
  2146     0210  3EFF               	addlw	-1
  2147     0211  1D03               	skipz
  2148     0212  2A0D               	goto	u36_25
  2149     0213                     i1l1047:
  2150     0213  3001               	movlw	1
  2151     0214  00F4               	movwf	??___lwdiv
  2152     0215  0874               	movf	??___lwdiv,w
  2153     0216  07F7               	addwf	___lwdiv@counter,f
  2154     0217                     i1l1049:
  2155     0217  1FF1               	btfss	___lwdiv@divisor+1,7
  2156     0218  2A1A               	goto	u37_21
  2157     0219  2A1B               	goto	u37_20
  2158     021A                     u37_21:
  2159     021A  2A0C               	goto	i1l1045
  2160     021B                     u37_20:
  2161     021B                     i1l1051:
  2162     021B  3001               	movlw	1
  2163     021C                     u38_25:
  2164     021C  1003               	clrc
  2165     021D  0DF5               	rlf	___lwdiv@quotient,f
  2166     021E  0DF6               	rlf	___lwdiv@quotient+1,f
  2167     021F  3EFF               	addlw	-1
  2168     0220  1D03               	skipz
  2169     0221  2A1C               	goto	u38_25
  2170     0222  0871               	movf	___lwdiv@divisor+1,w
  2171     0223  0273               	subwf	___lwdiv@dividend+1,w
  2172     0224  1D03               	skipz
  2173     0225  2A28               	goto	u39_25
  2174     0226  0870               	movf	___lwdiv@divisor,w
  2175     0227  0272               	subwf	___lwdiv@dividend,w
  2176     0228                     u39_25:
  2177     0228  1C03               	skipc
  2178     0229  2A2B               	goto	u39_21
  2179     022A  2A2C               	goto	u39_20
  2180     022B                     u39_21:
  2181     022B  2A33               	goto	i1l1057
  2182     022C                     u39_20:
  2183     022C                     i1l1053:
  2184     022C  0870               	movf	___lwdiv@divisor,w
  2185     022D  02F2               	subwf	___lwdiv@dividend,f
  2186     022E  0871               	movf	___lwdiv@divisor+1,w
  2187     022F  1C03               	skipc
  2188     0230  03F3               	decf	___lwdiv@dividend+1,f
  2189     0231  02F3               	subwf	___lwdiv@dividend+1,f
  2190     0232                     i1l1055:
  2191     0232  1475               	bsf	___lwdiv@quotient,0
  2192     0233                     i1l1057:
  2193     0233  3001               	movlw	1
  2194     0234                     u40_25:
  2195     0234  1003               	clrc
  2196     0235  0CF1               	rrf	___lwdiv@divisor+1,f
  2197     0236  0CF0               	rrf	___lwdiv@divisor,f
  2198     0237  3EFF               	addlw	-1
  2199     0238  1D03               	skipz
  2200     0239  2A34               	goto	u40_25
  2201     023A                     i1l1059:
  2202     023A  3001               	movlw	1
  2203     023B  02F7               	subwf	___lwdiv@counter,f
  2204     023C  1D03               	btfss	3,2
  2205     023D  2A3F               	goto	u41_21
  2206     023E  2A40               	goto	u41_20
  2207     023F                     u41_21:
  2208     023F  2A1B               	goto	i1l1051
  2209     0240                     u41_20:
  2210     0240                     i1l1061:
  2211     0240  0876               	movf	___lwdiv@quotient+1,w
  2212     0241  00F1               	movwf	?___lwdiv+1
  2213     0242  0875               	movf	___lwdiv@quotient,w
  2214     0243  00F0               	movwf	?___lwdiv
  2215     0244                     i1l527:
  2216     0244  0008               	return
  2217     0245                     __end_of___lwdiv:
  2218     007E                     btemp	set	126	;btemp
  2219     007E                     wtemp0	set	126
  2220                           
  2221                           	psect	idloc
  2222                           
  2223                           ;Config register IDLOC0 @ 0x2000
  2224                           ;	unspecified, using default values
  2225     2000                     	org	8192
  2226     2000  3FFF               	dw	16383
  2227                           
  2228                           ;Config register IDLOC1 @ 0x2001
  2229                           ;	unspecified, using default values
  2230     2001                     	org	8193
  2231     2001  3FFF               	dw	16383
  2232                           
  2233                           ;Config register IDLOC2 @ 0x2002
  2234                           ;	unspecified, using default values
  2235     2002                     	org	8194
  2236     2002  3FFF               	dw	16383
  2237                           
  2238                           ;Config register IDLOC3 @ 0x2003
  2239                           ;	unspecified, using default values
  2240     2003                     	org	8195
  2241     2003  3FFF               	dw	16383
  2242                           
  2243                           	psect	config
  2244                           
  2245                           ;Config register CONFIG1 @ 0x2007
  2246                           ;	Oscillator Selection bits
  2247                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2248                           ;	Watchdog Timer Enable bit
  2249                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2250                           ;	Power-up Timer Enable bit
  2251                           ;	PWRTE = OFF, PWRT disabled
  2252                           ;	RE3/MCLR pin function select bit
  2253                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2254                           ;	Code Protection bit
  2255                           ;	CP = OFF, Program memory code protection is disabled
  2256                           ;	Data Code Protection bit
  2257                           ;	CPD = OFF, Data memory code protection is disabled
  2258                           ;	Brown Out Reset Selection bits
  2259                           ;	BOREN = OFF, BOR disabled
  2260                           ;	Internal External Switchover bit
  2261                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2262                           ;	Fail-Safe Clock Monitor Enabled bit
  2263                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2264                           ;	Low Voltage Programming Enable bit
  2265                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2266                           ;	In-Circuit Debugger Mode bit
  2267                           ;	DEBUG = 0x1, unprogramme  2268     2007                     	org	8199
  2269     2007  20D4               	dw	8404
  2270                           
  2271                           ;Config register CONFIG2 @ 0x2008
  2272                           ;	Brown-out Reset Selection bit
  2273                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2274                           ;	Flash Program Memory Self Write Enable bits
  2275                           ;	WRT = OFF, Write protection off
  2276     2008                     	org	8200
  2277     2008  3FFF               	dw	16383

Data Sizes:
    Strings     59
    Constant    10
    Data        48
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     35      38
    BANK1            80      0      48
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> POT@CVPOT(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    cadena@txt	PTR unsigned char  size(2) Largest target is 48
		 -> STR_3(CODE[32]), POT@CVPOT(BANK0[4]), STR_1(CODE[23]), menu(BANK1[48]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv

Critical Paths under _main in BANK0

    _main->_cadena

Critical Paths under _isr in BANK0

    _isr->_POT
    _POT->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     466
                                             32 BANK0      3     3      0
                             _cadena
                           _initUART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0       0
                                             25 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cadena                                               7     5      2     466
                                             25 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  6     6      0    1804
                                             19 BANK0      6     6      0
                                _POT
                                _TXT
                           i1_cadena
 ---------------------------------------------------------------------------------
 (3) _TXT                                                  1     1      0      45
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _POT                                                  6     6      0    1513
                                             13 BANK0      6     6      0
                            _sprintf
                           i1_cadena
 ---------------------------------------------------------------------------------
 (4) i1_cadena                                             7     5      2     246
                                              0 COMMON     7     5      2
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cadena
   _initUART
   _setup

 _isr (ROOT)
   _POT
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     i1_cadena
   _TXT
   i1_cadena

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      30       7       60.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     23      26       5       47.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      64      12        0.0%
ABS                  0      0      64       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Apr 20 11:51:30 2023

                      pc 0002                       fsr 0004                      l120 02F9  
                    l112 0375                      l123 03B1                      l132 0200  
                    l128 01C2                      _GIE 005F                      u600 01D0  
                    u610 01EE                      u620 0200                      u621 01FF  
                    u707 02F5                      u590 01C6                      u591 01C5  
                    u680 037B                      u681 037A                      u697 0383  
                    _POT 02FA                      _TXT 03C5                      _isr 0104  
                    _num 0045                      fsr0 0004                      indf 0000  
                   ?_POT 0070                     ?_TXT 0070                     l1201 02DD  
                   l1211 02EC                     l1203 02DF                     l1221 0392  
                   l1213 02EF                     l1205 02E2                     l1231 039F  
                   l1223 0393                     l1207 02E3                     l1241 03AE  
                   l1233 03A2                     l1225 0396                     l1217 038D  
                   l1209 02E9                     l1235 03A5                     l1227 0399  
                   l1219 0391                     l1173 01BD                     l1237 03A8  
                   l1229 039C                     l1175 01C6                     l1239 03AB  
                   l1191 02D3                     l1271 0360                     l1177 01DE  
                   l1193 02D7                     l1185 02C1                     l1273 036A  
                   l1179 01E4                     l1195 02D8                     l1187 02C5  
                   l1275 037B                     l1197 02D9                     l1189 02C6  
                   l1199 02DA                     _ADIE 0466                     _ADIF 0066  
                   ?_isr 0070                     _ADON 00F8                     STR_1 01A2  
                   STR_2 01B9                     STR_3 0182                     _BRGH 04C2  
                   _CREN 00C4                     _PEIE 005E                     i1l95 014B  
                   _SPEN 00C7                     _TXEN 04C5                     _TXIF 0064  
                   _SYNC 04C4                     _Vpot 0043                     _main 0360  
                   _menu 00A0                     btemp 007E              i1cadena@txt 0070  
                   start 0012                    ??_POT 002D                    ??_TXT 0070  
                  ??_isr 0033                    ?_main 0070                    _BRG16 0C3B  
                  _ANSEL 0188          __end_of___lwdiv 0245                    i1l104 015B  
                  i1l132 0286                    i1l141 03D3                    i1l135 032F  
                  i1l128 0248                    i1l138 03C5                    i1l251 0103  
        __end_of___lwmod 02C1                    i1l527 0244                    i1l537 02C0  
                  _RCREG 001A                    u40_25 0234                    u41_20 0240  
                  u41_21 023F                    u42_20 028D                    u50_20 0094  
                  u42_21 028C                    u50_21 0093                    _SPBRG 0099  
                  u50_25 0090                    u35_20 0209                    u51_20 009F  
                  u35_21 0208                    u51_21 009E                    _PORTA 0005  
                  _PORTB 0006                    _PORTD 0008                    u43_25 0291  
                  _PORTE 0009                    u44_20 029F                    u52_20 00A5  
                  u44_21 029E                    u52_21 00A4                    u36_25 020D  
                  u37_20 021B                    u45_20 02A9                    u53_20 00EF  
                  u37_21 021A                    u45_21 02A8                    u53_21 00EE  
                  u45_25 02A5                    u54_20 00FF                    u54_21 00FE  
                  u38_25 021C                    u46_25 02B0                    u39_20 022C  
                  u47_20 02BC                    u55_20 024C                    u63_20 03CB  
                  u39_21 022B                    u47_21 02BB                    u55_21 024B  
                  u63_21 03CA                    u39_25 0228                    u71_27 0303  
                  u48_20 0036                    u56_20 0256                    u64_20 0108  
                  u48_21 0035                    u64_21 0107                    u49_20 006E  
                  u57_20 0274                    u65_20 013A                    u49_21 006D  
                  u65_21 0139                    _TRISA 0085                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    u58_20 0286  
                  u66_20 014F                    u58_21 0285                    u66_21 014E  
                  u67_20 0158                    u67_21 0157                    _TXREG 0019  
        __end_of_dpowers 0182                    _setup 02C1                    pclath 000A  
       __end_ofi1_cadena 0287                    status 0003                    wtemp0 007E  
        __end_of_sprintf 0104          __initialization 0015             __end_of_main 038D  
                 ??_main 0040                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1101 005E                   i1l1111 0077  
                 i1l1103 0066                   i1l1041 0203                   i1l1121 0095  
                 i1l1105 006A                   i1l1051 021B                   i1l1043 0209  
                 i1l1131 00B1                   i1l1123 009F                   i1l1107 006E  
                 i1l1053 022C                   i1l1045 020C                   i1l1061 0240  
                 i1l1133 00DD                   i1l1125 00A5                   i1l1117 0079  
                 i1l1109 0072                   i1l1141 00FF                   i1l1055 0232  
                 i1l1047 0213                   i1l1039 0201                   i1l1071 0297  
                 i1l1135 00E2                   i1l1127 00AA                   i1l1151 024C  
                 i1l1057 0233                   i1l1049 0217                   i1l1081 02B6  
                 i1l1073 029B                   i1l1065 0287                   i1l1137 00E6  
                 i1l1129 00AE                   i1l1153 0264                   i1l1161 0308  
                 i1l1059 023A                   i1l1075 029F                   i1l1067 028D  
                 i1l1083 02BC                   i1l1091 0036                   i1l1139 00EF  
                 i1l1155 026A                   i1l1163 030B                   i1l1251 011F  
                 i1l1243 0104                   i1l1077 02A9                   i1l1069 0290  
                 i1l1093 003B                   i1l1149 0245                   i1l1165 031A  
                 i1l1157 02FA                   i1l1181 03C5                   i1l1261 014F  
                 i1l1317 0143                   i1l1253 0129                   i1l1245 0108  
                 i1l1079 02AF                   i1l1319 0053                   i1l1095 0040  
                 i1l1087 002D                   i1l1167 0323                   i1l1159 02FD  
                 i1l1183 03CB                   i1l1263 0158                   i1l1255 0132  
                 i1l1247 010B                   i1l1089 0030                   i1l1169 032C  
                 i1l1265 015A                   i1l1249 011A                   i1l1099 0041  
                 i1l1259 013B                   _OSCCON 008F                   _SPBRGH 009A  
                 _cadena 01BD         __end_of_initUART 03B2                ??___lwdiv 0074  
              ??___lwmod 007C                   _opcion 0044                   saved_w 007E  
              ??_sprintf 0023  __end_of__initialization 0026           __pcstackCOMMON 0070  
           __pidataBANK1 0330            __end_of_setup 02FA                ?i1_cadena 0070  
                ??_setup 0039               __pbssBANK0 0043               __pmaintext 0360  
                ?_cadena 0039               __pintentry 0004               ??i1_cadena 0072  
             __stringtab 0168                ?_initUART 0070                  ___lwdiv 0201  
                ___lwmod 0287                  cadena@i 003E                  __ptext1 02C1  
                __ptext2 038D                  __ptext3 01BD                  __ptext4 0104  
                __ptext5 03C5                  __ptext6 02FA                  __ptext7 0245  
                __ptext8 002A                  __ptext9 0287                  _dpowers 0178  
                _sprintf 002A     end_of_initialization 0026               ??_initUART 0039  
              _RCSTAbits 0018                i1cadena@i 0075                _TXSTAbits 0098  
         __end_of_cadena 0201      start_initialization 0015              __end_of_POT 0330  
            __end_of_TXT 03D4              __end_of_isr 0168                 ??_cadena 003B  
             init_fetch0 03B2              __pdataBANK1 00A0                ___latbits 0002  
          __pcstackBANK0 0020              sprintf@flag 0027              sprintf@prec 0028  
       ___lwdiv@dividend 0072                 POT@CVPOT 002F                cadena@txt 0039  
               ?___lwdiv 0070                 ?___lwmod 0078                __pstrings 0168  
       ___lwdiv@quotient 0075                 ?_sprintf 0020        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C              TXT@caracter 0070  
             _ADCON0bits 001F              __stringbase 0177               _ADCON1bits 009F  
               i1_cadena 0245       __end_of__stringtab 0178               sprintf@val 0029  
        ___lwdiv@divisor 0070          ___lwdiv@counter 0077                 __ptext10 0201  
               _initUART 038D                 init_ram0 03B6                 intlevel1 0000  
              sprintf@ap 0026                sprintf@sp 002B         ___lwmod@dividend 007A  
              stringcode 0172                 sprintf@c 002C                 sprintf@f 0020  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 0172  
               stringtab 0168  
